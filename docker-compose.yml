version: '3.8'

services:
  # Simulated Microservices
  service-a:
    build: ./services/service-a
    container_name: monitoring-service-a
    ports:
      - "5000:5000"
    environment:
      - SERVICE_NAME=service-a
      - PORT=5000
    networks:
      - monitoring-network
    restart: unless-stopped

  service-b:
    build: ./services/service-b
    container_name: monitoring-service-b
    ports:
      - "5001:5001"
    environment:
      - SERVICE_NAME=service-b
      - PORT=5001
    networks:
      - monitoring-network
    restart: unless-stopped

  service-c:
    build: ./services/service-c
    container_name: monitoring-service-c
    ports:
      - "5002:5002"
    environment:
      - SERVICE_NAME=service-c
      - PORT=5002
    networks:
      - monitoring-network
    restart: unless-stopped

  # Prometheus for metrics collection
  prometheus:
    image: prom/prometheus:latest
    container_name: monitoring-prometheus
    ports:
      - "9090:9090"
    volumes:
      - ./prometheus/prometheus.yml:/etc/prometheus/prometheus.yml
      - ./prometheus/alerts.yml:/etc/prometheus/alerts.yml
      - prometheus-data:/prometheus
    command:
      - '--config.file=/etc/prometheus/prometheus.yml'
      - '--storage.tsdb.path=/prometheus'
      - '--web.console.libraries=/etc/prometheus/console_libraries'
      - '--web.console.templates=/etc/prometheus/consoles'
      - '--web.enable-lifecycle'
    networks:
      - monitoring-network
    restart: unless-stopped

  # AlertManager for alert management
  alertmanager:
    image: prom/alertmanager:latest
    container_name: monitoring-alertmanager
    ports:
      - "9093:9093"
    volumes:
      - ./alertmanager/alertmanager.yml:/etc/alertmanager/alertmanager.yml
      - alertmanager-data:/alertmanager
    command:
      - '--config.file=/etc/alertmanager/alertmanager.yml'
      - '--storage.path=/alertmanager'
    networks:
      - monitoring-network
    restart: unless-stopped

  # Grafana for visualization
  grafana:
    image: grafana/grafana:latest
    container_name: monitoring-grafana
    ports:
      - "3000:3000"
    environment:
      - GF_SECURITY_ADMIN_USER=admin
      - GF_SECURITY_ADMIN_PASSWORD=admin
      - GF_USERS_ALLOW_SIGN_UP=false
    volumes:
      - ./grafana/provisioning/datasources:/etc/grafana/provisioning/datasources
      - ./grafana/provisioning/dashboards:/etc/grafana/provisioning/dashboards
      - grafana-data:/var/lib/grafana
    networks:
      - monitoring-network
    restart: unless-stopped
    depends_on:
      - prometheus

  # Web Dashboard for real-time visualization
  dashboard:
    build: ./dashboard
    container_name: monitoring-dashboard
    ports:
      - "8080:8080"
    networks:
      - monitoring-network
    restart: unless-stopped
    depends_on:
      - prometheus
      - service-a
      - service-b
      - service-c

networks:
  monitoring-network:
    driver: bridge

volumes:
  prometheus-data:
  alertmanager-data:
  grafana-data:
